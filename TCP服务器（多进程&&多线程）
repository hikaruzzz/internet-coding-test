#coding = utf-8

from socket import *
from multiprocessing import *
from threading import Thread

#获取本机ip
def get_host_ip():
    s = socket(AF_INET,SOCK_DGRAM)
    try:
        s.connect(('114.114.114.114',80))
        ip = s.getsockname()[0]
        return ip
    finally:
        pass

#服务客户端的函数，用于多进程
def forClient(newSocket,destAddr): #两个重要的参数
    while True:
        recvData = newSocket.recv(1024)  # !!!!!!!!!!!!
        if len(recvData) > 0:
            print('from:%s say:%s' % (str(destAddr), recvData))
        else:
            print('%s already disconnected' % str(destAddr))
            break
    newSocket.close()


def main():
    hostIP = get_host_ip()
    print('present IP:%s' % hostIP)
    maxSock = input("input max connect num:")

    serverSocket = socket(AF_INET,SOCK_STREAM)
    serverSocket.setsockopt(SOL_SOCKET,SO_REUSEADDR,1)  #设置重复使用
    addr = ('',80)
    serverSocket.bind(addr)
    serverSocket.listen(int(maxSock))

    try:
        while True:
            print("---waitting connect---")
            newSocket, destAddr = serverSocket.accept()
            print("---connected,from:%s---"%str(destAddr))

            client = Process(target=forClient,args=(newSocket,destAddr))

            #多线程语句，以下一条-------------------
            #client = Thread(target=forClient,args=(newSocket,destAddr))

            client.start()
            
            
            #多进程时   子进程copy一份新的newSocket,所以主进程中的newSocket可以关闭等待新的进程，newSocket 用于接收destAddr...
            #多线程时   这条语句删掉，线程会共享套接字，不能close
            newSocket.close() 

    finally:
        #serverSocket用于接收新的客户
        serverSocket.close() #!!!!!!!!!!!!!

if __name__ == '__main__':
    main()
